# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Configuration file for running experiments
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# timeout_each_job : FPGA Task script splits fpga flow into multiple jobs
# Each job execute fpga_flow script on combination of architecture & benchmark
# timeout_each_job is timeout for each job
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

[GENERAL]
run_engine=openfpga_shell
power_tech_file = ${PATH:OPENFPGA_PATH}/openfpga_flow/tech/PTM_45nm/45nm.xml
power_analysis = true
spice_output=false
verilog_output=true
timeout_each_job = 1*60
fpga_flow=vpr_blif

[OpenFPGA_SHELL]
openfpga_shell_template=/home/Ismael/3D_FPGA_Templates/vpr_testing/simple_test/templates/generate_testbench_example_script.openfpga
openfpga_arch_file=/home/Ismael/3D_FPGA_Templates/vpr_testing/simple_test/templates/k4_N4_40nm_standalone_openfpga.xml
openfpga_sim_setting_file=${PATH:OPENFPGA_PATH}/openfpga_flow/openfpga_simulation_settings/auto_sim_openfpga.xml
# Here, we use a fabric netlist generated by another task 
# to show case the correctness of testbench generator
# Caution: You MUST run the task 'basic_tests/generate_fabric'
# before this task!!!
openfpga_fabric_verilog_netlist=${PATH:OPENFPGA_PATH}/openfpga_flow/tasks/basic_tests/3D_generate_fabric/latest/verilog/SRC

[ARCHITECTURES]
arch0=/home/Ismael/3D_FPGA_Templates/vpr_testing/simple_test/templates/3d_openfpga_simple_template.xml

[BENCHMARKS]

bench0=${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/and2/and2.blif

[SYNTHESIS_PARAM]
bench_read_verilog_options_common = -nolatches
bench0_top = and2
bench0_act = ${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/and2/and2.act
bench0_verilog = ${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/and2/and2.v

[SCRIPT_PARAM_MIN_ROUTE_CHAN_WIDTH]
